*.pro
*.pro.user
*.pro.user*
build*
build-*
*.o
*.sovoid DrawCircle(float cx, float cy, float r, int num_segments) 
{ 
	float theta = 2 * 3.1415926 / float(num_segments); 
	float c = cosf(theta);//precalculate the sine and cosine
	float s = sinf(theta);
	float t;

	float x = r;//we start at angle = 0 
	float y = 0; 
    
	glBegin(GL_LINE_LOOP); 
	for(int ii = 0; ii < num_segments; ii++) 
	{ 
		glVertex2f(x + cx, y + cy);//output vertex 
        
		//apply the rotation matrix
		t = x;
		x = c * x - s * y;
		y = s * t + c * y;
	} 
	glEnd(); 
}

void DrawCircle(float cx, float cy, float r, int num_segments) 
{ 
	float theta = 2 * 3.1415926 / float(num_segments); 
	float c = cosf(theta);//precalculate the sine and cosine
	float s = sinf(theta);
	float t;

	float x = r;//we start at angle = 0 
	float y = 0; 
    
	glBegin(GL_LINE_LOOP); 
	for(int ii = 0; ii < num_segments; ii++) 
	{ 
		glVertex2f(x + cx, y + cy);//output vertex 
        
		//apply the rotation matrix
		t = x;
		x = c * x - s * y;
		y = s * t + c * y;
	} 
	glEnd(); 
}


*.a
*.so.*
thirdparty/libzip-1.1.1
pointcloud109.png
save/image137.png
firefly/camera.txt
firefly/images.zip
.gitignore
result.txt
save/image478.png
save/image528.png
save/pointcloud137.png
save/pointcloud478.png
save/pointcloud528.png
save/image6s_466ms.png
save/image7s_200ms.png
save/image26s_533ms.png
save/image31s_333ms.png
save/pointcloud6s_466ms.png
save/pointcloud7s_200ms.png
save/pointcloud26s_533ms.png
save/pointcloud31s_333ms.png
todo
firefly/times.txt
save/image0s_0ms.png
save/image2s_300ms.png
save/image3s_950ms.png
save/pointcloud0s_0ms.png
save/pointcloud2s_300ms.png
save/pointcloud3s_950ms.png
result.txt
save/image_0min_0s_0ms.png
save/image_0min_28s_533ms.png
save/image_1min_24s_60666ms.png
save/pointcloud_0min_0s_0ms.png
save/pointcloud_0min_28s_533ms.png
save/
export2.pcd
export.pcd
